"""add user fields

Revision ID: de23f408d9d7
Revises: 
Create Date: 2025-04-03 23:55:33.073762

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de23f408d9d7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('email', sa.String(length=120), nullable=True))
    op.add_column('user', sa.Column('employee_id', sa.String(length=20), nullable=True))
    op.add_column('user', sa.Column('full_name', sa.String(length=100), nullable=True))
    op.add_column('user', sa.Column('position', sa.String(length=100), nullable=True))
    op.add_column('user', sa.Column('hire_date', sa.Date(), nullable=True))
    op.add_column('user', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('user', sa.Column('role_id', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_unique_constraint(None, 'user', ['employee_id'])
    op.create_unique_constraint(None, 'user', ['email'])
    op.create_foreign_key(None, 'user', 'role', ['role_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'role_id')
    op.drop_column('user', 'is_active')
    op.drop_column('user', 'hire_date')
    op.drop_column('user', 'position')
    op.drop_column('user', 'full_name')
    op.drop_column('user', 'employee_id')
    op.drop_column('user', 'email')
    # ### end Alembic commands ###
